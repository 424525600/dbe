<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
    <!--for ie9 support-->
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />

    <script type="text/javascript" src='../webControl/vdWebControl.js'></script>
    
    <script type="text/javascript" src='../webControl/commands.js'></script>

    <script type="text/javascript">
       
        function vdrawInitPageLoad() {
            vdmanager.AttachCanvas('display', 400, 400);
            document.getElementById('noJavascript').innerHTML = "";
            var vdcanvas = vdmanager.vdrawObject('display');
            vdcanvas.GripManager.Enable = false;
            vdcanvas.SetDefaultTimeOutMilliseconds(500); 
            vdcanvas.vdprogress = _progress;
            vdcanvas.vdPrompt = _onprompt;
            ExtendCancvas();
            vdcanvas.ActiveAction().DefaultActions = vdConst.DEFAULT_ZOOMSCALE + vdConst.DEFAULT_SCROLL + vdConst.DEFAULT_ZOOMEXTENTS;
            Open();
        }
        function _progress(evt) {
            if (evt.percent < 0) printInfo('info2', evt.Info);
            else if (evt.percent >= 100) printInfo('info2', ' ');
            else printInfo('info2', evt.Info + " " + evt.percent.toString() + "%");
        }
        function _onprompt(sender, msg) {
            printInfo('info2', msg);
        }
        function Open() {
            vdmanager.vdrawObject('display').SelectDocument("../Drawings/Electric.vds");
        }
        function ExtendCancvas() {
            var winW = 640, winH = 480;
            if (document.body && document.body.offsetWidth) {
                winW = document.body.offsetWidth;
                winH = document.body.offsetHeight;
            }
            if (document.compatMode == 'CSS1Compat' &&
                document.documentElement &&
                document.documentElement.offsetWidth) {
                winW = document.documentElement.offsetWidth;
                winH = document.documentElement.offsetHeight;
            }
            if (window.innerWidth && window.innerHeight) {
                winW = window.innerWidth;
                winH = window.innerHeight;
            }
            vdmanager.vdrawObject('display').SetSize(winW - 30 - 150, winH - 130);
        }
        this.printInfo = function(infoId, text) {
            var info = document.getElementById(infoId);
            if (info == undefined) return;
            info.innerHTML = text;
        }

        //Commands

        function ZoomExtends() {
            vdmanager.vdrawObject('display').zoomExtents();
            vdmanager.vdrawObject('display').redraw();
        }
        function ZoomWindow() {
            CmdZoomWindow('display'); //commands.js 
        }
        function AddLine() {
           
            var vdcanvas = vdmanager.vdrawObject('display');
            vdcanvas.scriptCommand.line();
        }
        function GetDistance() {
            CmdGetDistance('display'); //commands.js
        }
        function GetPoint() {
            CmdPointId('display');
        }
        function _selectCallback(vdcanvas) {
            var selectedEntities = vdcanvas.scriptCommand.ActiveSelection();
            if (!selectedEntities || selectedEntities.length == 0) return;
            for (var k = 0; k < selectedEntities.length; k++) {
                var fig = selectedEntities[k];
                fig.HighLight = true;
            }
            vdcanvas.redraw();
        }
        function Select() {
            
            var vdcanvas = vdmanager.vdrawObject('display');
            vdcanvas.scriptCommand.select(null, _selectCallback);
        }
        function Erase() {
         
            var vdcanvas = vdmanager.vdrawObject('display');
            vdcanvas.scriptCommand.select(null, function (vdcanvas) { vdcanvas.scriptCommand.erase(); vdcanvas.redraw(); });
        }
        function EraseHighlighted() {
            var count = 0;
            var vdcanvas = vdmanager.vdrawObject('display');
            var activelayout = vdcanvas.GetActiveLayout();
            for (k = 0; k < activelayout.Entities.Items.length; k++) {
                var fig = vdcanvas.GetEntityItem(activelayout.Entities.Items[k]);
                if (fig.HighLight != null && fig.HighLight == true) {
                    fig.Deleted = true;
                    count++;
                }
            }
            vdcanvas.redraw();
            alert(count.toString() + " Entities Erased");
        }
    </script>

    <style type="text/css">
        .button {
	        display: inline-block;
	        outline: none;
	        cursor: pointer;
	        text-align: center;
	        text-decoration: none;
	        font: 14px/100% Arial, Helvetica, sans-serif;
	        padding: .5em 2em .55em;
	        text-shadow: 0 1px 1px rgba(0,0,0,.3);
	        -webkit-border-radius: .5em; 
	        -moz-border-radius: .5em;
	        border-radius: .5em;
	        -webkit-box-shadow: 0 1px 2px rgba(0,0,0,.2);
	        -moz-box-shadow: 0 1px 2px rgba(0,0,0,.2);
	        box-shadow: 0 1px 2px rgba(0,0,0,.2);
        }
        .button:hover {
	        text-decoration: none;
        }
        .button:active {
	        position: relative;
	        top: 1px;
        }
        /* blue */
        .blue {
	        color: #d9eef7;
	        border: solid 1px #0076a3;
	        background: #0095cd;
	        background: -webkit-gradient(linear, left top, left bottom, from(#00adee), to(#0078a5));
	        background: -moz-linear-gradient(top,  #00adee,  #0078a5);
	        filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#00adee', endColorstr='#0078a5');
	        width : 115px;
	        height :15px;
        }
        .blue:hover {
	        background: #007ead;
	        background: -webkit-gradient(linear, left top, left bottom, from(#0095cc), to(#00678e));
	        background: -moz-linear-gradient(top,  #0095cc,  #00678e);
	        filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#0095cc', endColorstr='#00678e');
	        width : 112px;
	        height :15px;
        }
        .blue:active {
	        color: #80bed6;
	        background: -webkit-gradient(linear, left top, left bottom, from(#0078a5), to(#00adee));
	        background: -moz-linear-gradient(top,  #0078a5,  #00adee);
	        filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#0078a5', endColorstr='#00adee');
	        width : 112px;
	        height :15px;
        }
    </style>
</head>
<body onload="vdrawInitPageLoad()" onunload="OnUnload()">
    <table>
        <tr>
            <td colspan="2"> This is a basic sample that is intended to demonstrate basic functionality of our web javascript solution.<br/>
                        So in this sample a pre-build document is loaded that contains some 
                vdFigures. Some basic commands are being described in this sample using commands.js. 
                This file is open for developers and can be modified either for globalization of the messages  either to
                 add new commands.<br/>
            </td>
        </tr>
        <tr>
            <td rowspan="2">
                <canvas id='display' tabindex="1"> </canvas>
                <div id='noJavascript'>
                    <div style="height: 400px; width: 500px; background-color:#b0c4de;">                    
                    The browser you're using does not allow the use of Javascript, please enable Javascript execution or use a different web browser.
                    </div>
                </div>
            </td>
            <td colspan="1" valign =top>   
                <a href ="#" onclick="ZoomExtends()" class = "button BLUE">Zoom Extends</a><br />
                <img src="dot_clear.gif" width="10" height="3">
                <a href ="#" onclick="ZoomWindow()" class = "button BLUE">Zoom Window</a><br />
                <img src="dot_clear.gif" width="10" height="3">
                <a href ="#" onclick="AddLine()" class = "button BLUE">Add Line</a><br />
                <img src="dot_clear.gif" width="10" height="3">
                <a href ="#" onclick="GetDistance()" class = "button BLUE">Get Distance</a><br />
                <img src="dot_clear.gif" width="10" height="3">
                <a href ="#" onclick="GetPoint()" class = "button BLUE">Get Point</a><br />
                <img src="dot_clear.gif" width="10" height="15">
                <a href ="#" onclick="Select()" class = "button BLUE">HighLight Entities</a><br />
                <img src="dot_clear.gif" width="10" height="3">
                <a href ="#" onclick="EraseHighlighted()" class = "button BLUE">Erase Highlighted</a><br />
                <img src="dot_clear.gif" width="10" height="15">
                <a href ="#" onclick="Erase()" class = "button BLUE">Erase Entities</a><br />
            </td>
        </tr>
    </table>
    <table>
        <tr>
            <td colspan="8">
                <label id="Label2">
                    Info :</label><label id="info2"></label><br />
            </td>
        </tr>
    </table>
</body>
</html>
